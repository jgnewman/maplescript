(import 'custom-syntax-highlighter' highlight)
(import './highlight-patterns' patterns)

-- Fix the result of markdownifying where code blocks
-- are weirdly indented by 4 spaces.
(make (dedentBlocks)
  (m:map
    (m:domArray 'pre code')
    (@ [block] (make newText (-> (block.innerText.split /\n/g)
                                 (m:map & (@ [line] (line.replace /^\s{8}/ '')))
                                 (&join '\n')))
               (m:dangerouslyMutate 'innerHTML' newText block))))

(dedentBlocks)

-- Run the syntax highlighter on code blocks
(highlight {

  patterns
    (@ [block] (if (>= (block.className.indexOf 'maplescript') 0)
                     (patterns:maplePatterns)
                   (>= (block.className.indexOf 'javascript') 0)
                     (patterns:jsPatterns)
                   []))

  postProcess
    (@ [text] (text.replace /(\&)([^\#])/g '<span class="keyword ref">$1</span>$2'))

})

-- Build navigation

(make (buildNode type id text)
  (do (make cleanText (text.replace /\(([^\s]+)(\s+[^\s]+)*\)/ '$1'))
      (m:vdom:render
        <a { :href `#${id}` :class (type.toLowerCase) }>
          cleanText
        </a>
      )))

(make
  (buildNav)
    (buildNav (m:domArray 'h1, h2, h3, h4, h5, h6') (m:dom '#js-nav'))
  (buildNav [] nav)
    nav
  (buildNav [title|rest] nav)
    (do (make node (buildNode title.nodeName (title.getAttribute 'id') title.innerText))
        (nav.appendChild node)
        (setTimeout (@ (node.setAttribute 'class' `show ${(node.getAttribute 'class')}`)
                       (buildNav rest nav))
                    10)))

(buildNav)

-- Init menu opening and closing

(make sidebar (m:dom '.sidebar'))

(make (hasClass elem text)
  (do (make classes (elem.className.split /\s+/g))
      (m:contains classes text)))

(make (addClass elem cls)
  (if (not (hasClass elem cls))
        (m:dangerouslyMutate 'className' `${elem.className} ${cls}` elem)))

(make (removeClass elem cls)
  (if (hasClass elem cls)
        (do (make classes (elem.className.split /\s+/g))
            (classes.splice (classes.indexOf cls) 1)
            (m:dangerouslyMutate 'className' (classes.join ' ') elem))))

(make (open evt)
  (do (evt.preventDefault)
      (addClass sidebar 'open')))

(make (close evt)
  (do (evt.preventDefault)
      (removeClass sidebar 'open')))

(m:dangerouslyMutate 'onclick' open (m:dom '#js-menu-open'))
(m:dangerouslyMutate 'onclick' close (m:dom '#js-menu-close'))
