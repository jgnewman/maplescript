(import 'custom-syntax-highlighter' highlight)

# Fix the result of markdownifying where code blocks
# are weirdly indented by 4 spaces.
(make dedentBlocks []
  (m:map
    (m:domArray 'pre code')
    (fn [block]
      (make newText (-> (block.innerText.split /\n/g)
                        (m:map @ (fn [line] (line.replace /^\s{8}/ '')))
                        (@join '\n')))
      (m:dangerouslyMutate 'innerHTML' newText block))))

(dedentBlocks)

# Run the syntax highlighter on code blocks
(highlight {
  patterns {
    'string single'  /^(\'[^\'\n]*\')/
    'string double'  /^(\"[^\'\n]*\")/
    'string tick'    /^(\`[^\'\n]*\`)/
    'number'         /^(\d+(\.\d+)?)/
    'keyword sym'    /^(\:\:)/
    'keyword ref'    /^(\@|async|await|const|do|element|fn|from|if|import|make|NaN|null|of|return|undefined)\b/
    'keyword call'   [/^\((=\>\>|\-\>|\@|async|await|do|element|fn|if|make|of)\b/ '(']
    'normal call'    [/^\(([^\s\,\)\;]+)/ '(']
    'symbol'         [/^ (\:[A-Za-z0-9_\-\$]+)/ ' ']
    'comment single' /^((\#|\/\/)[^\r\n]+)/
    'comment multi'  /^(\#\#\#.*\#\#\#)/
    'html close'     [/^\<\\\/([A-Za-z0-9\-]+)/ '<&#47;']
    'html open'      [/^\<\\([A-Za-z0-9\-]+)/ '<' ]
  }
})

# Build navigation


(make buildNode [type id text]
  (make cleanText (text.replace /\(([^\s]+)(\s+[^\s]+)*\)/ '$1'))
  (m:vdom:render <a {
    :href `#${id}`
    :class (type.toLowerCase)
  }>cleanText</a>))

(make buildNav
  (of [] (buildNav (m:domArray 'h1, h2, h3, h4, h5, h6') (m:dom '#js-nav')))
  (of [[] nav] nav)
  (of [[title|rest] nav]
    (make node (buildNode title.nodeName (title.getAttribute 'id') title.innerText))
    (nav.appendChild node)
    (setTimeout (fn []
      (node.setAttribute 'class' `show ${(node.getAttribute 'class')}`)
      (buildNav rest nav))
    10)))

(buildNav)
